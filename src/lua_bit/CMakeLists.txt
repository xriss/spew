


PROJECT(lua_bit)


INCLUDE_DIRECTORIES(

	${CMAKE_CURRENT_SOURCE_DIR}
	${lua_include_dir}
)


LINK_DIRECTORIES(

	${CMAKE_CURRENT_SOURCE_DIR}
)


SET(lua_bit_src_sources


bit.c

)



SET(lua_bit_sources ${lua_bit_src_sources} )

IF(WIN32)

	IF(BUILD_SHARED_LIBS)

		ADD_DEFINITIONS("-DLUALIB_API=__declspec(dllexport)")

	ENDIF(BUILD_SHARED_LIBS)
	
ENDIF(WIN32)



SOURCE_GROUP(src FILES ${lua_bit_src_sources} )




IF(BUILD_SHARED_LIBS)

	ADD_LIBRARY(bit SHARED ${lua_bit_sources} )
	
ELSE(BUILD_SHARED_LIBS)

	ADD_LIBRARY(bit STATIC ${lua_bit_sources} )

ENDIF(BUILD_SHARED_LIBS)





TARGET_LINK_LIBRARIES(bit

	lua5.1
)

IF(WIN32)

	ADD_CUSTOM_COMMAND( TARGET bit POST_BUILD COMMAND ${CMAKE_COMMAND} ARGS -E copy
		${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_CFG_INTDIR}/bit.dll
		${CMAKE_CURRENT_SOURCE_DIR}/../../nix/lib/bit.dll
	)

	ADD_CUSTOM_COMMAND( TARGET bit POST_BUILD COMMAND ${CMAKE_COMMAND} ARGS -E copy
		${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_CFG_INTDIR}/bit.pdb
		${CMAKE_CURRENT_SOURCE_DIR}/../../nix/lib/bit.pdb
	)

ELSE(WIN32)

	ADD_CUSTOM_COMMAND( TARGET bit POST_BUILD COMMAND ${CMAKE_COMMAND} ARGS -E copy
		${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_CFG_INTDIR}/libbit.so
		${CMAKE_CURRENT_SOURCE_DIR}/../../nix/lib/bit.so
	)


ENDIF(WIN32)
